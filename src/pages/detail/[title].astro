---
import Layout from "@layouts/Layout.astro";

const { title } = Astro.params;

const fetchNews = async () => {
  const response = await fetch(
    `https://newsapi.org/v2/top-headlines?country=us&apiKey=22c4a751fcbb4a9b869012a20633e9e9`
  );
  const data = await response.json();
  return data.articles;
};

const fetchSources = async () => {
  const response = await fetch(
    `https://newsapi.org/v2/top-headlines/sources?apiKey=22c4a751fcbb4a9b869012a20633e9e9`
  );
  const data = await response.json();
  return data.sources;
};

const articles = await fetchNews();
const sources = await fetchSources();
const article = articles.find(
  (article: any) => article.title === decodeURIComponent(title || "")
);

const defaultImage =
  "https://icon-library.com/images/no-picture-available-icon/no-picture-available-icon-1.jpg";

const getCategory = (sourceId: string) => {
  const source = sources.find((source: any) => source.id === sourceId);
  return source ? source.category : "Category not available";
};
---

<Layout>
  <div class="container">
    <div class="card custom-border mt-2 mb-4">
      <div class="card-header bg-transparent custom-border">
        <h1>{article ? article.title : "Article Not Found"}</h1>
      </div>
      <img
        src={article ? article.urlToImage || defaultImage : defaultImage}
        alt="News Image"
      />

      <div class="card-footer bg-transparent custom-border">
        <div class="d-flex justify-content-between">
          <p>
            Source: {article ? article.source.name : "Source not available"}
          </p>
          <p>
            Published: {
              article
                ? new Date(article.publishedAt).toLocaleString()
                : "Date not available"
            }
          </p>
        </div>
        <div class="d-flex justify-content-between">
          <p>Author: {article ? article.author || "Unknown" : "Unknown"}</p>
          <p>
            Category: {
              article
                ? getCategory(article.source.id)
                : "Category not available"
            }
          </p>
        </div>
        <div>
          <p>
            <strong
              >{
                article ? article.description : "Description not available"
              }</strong
            >
          </p>
          <p>
            {
              article
                ? article.content || "Content not available"
                : "Content not available"
            }
            <a href={article.url} target="_blank" class="read-full-article"
              >Read Full Article</a
            >
          </p>
        </div>
      </div>
    </div>
  </div>

  <div class="center-container">
    <div class="button-container">
      <a href="/" class="btn button-back">Back to Home</a>
    </div>
  </div>
</Layout>

<style>
  .custom-border {
    border-color: #594a42;
    background-color: #594a42;
    color: white;
    border: 1px solid #4c3f38;
    box-shadow: 0px 4px 8px rgba(73, 31, 3, 0.4);
  }

  h1 {
    font-size: 25px;
    text-align: left;
  }

  .read-full-article {
    background-color: white;
    color: #594a42;
    font-weight: bold;
    padding: 2px;
  }

  .read-full-article:hover {
    color: white;
    background-color: #594a42;
    padding: 2px;
  }

  .button-back {
    background-color: #594a42;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .button-back:hover {
    background-color: #4c3f38;
    color: white;
  }

  .center-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
  }
</style>
